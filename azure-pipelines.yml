parameters:
  - name: terraformVersion
    type: string
    default: 'latest'

trigger:
- none

stages:
  - stage: 'OCI_VCN_Subnet_SecurityList'
    dependsOn: []
    displayName: 'OCI VCN, Subnets and Security List'

    jobs:
      - job: 'terraforminitplan'
        displayName: 'Initialize and Plan Terraform for OCI VCN, Subnet and Security List'
        pool: Self-Hosted

        steps:

          - task: TerraformInstaller@0
            displayName: 'Terraform Install'
            inputs:
              terraformVersion: ${{ parameters.terraformVersion }}
          - checkout: none

          - task: CmdLine@2       
            inputs:
              script: |
                terraform init -backend-config="/terraform/variables/backend_oracle.tf"
              workingDirectory: '$(System.DefaultWorkingDirectory)/01_vcn_subnet/'
          - checkout: none 

          - task: CmdLine@2
            inputs:
              script: |
                terraform plan -var-file="/terraform/variables/terraform-oracle/prod.tfvars -out ${BUILD_BUILDNUMBER}.tfplan"
              workingDirectory: '$(System.DefaultWorkingDirectory)/01_vcn_subnet/'
          - checkout: none

          - task: ArchiveFiles@2
            condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
            displayName: 'Create Plan Artifact'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/01_vcn_subnet/'
              includeRootFolder: false
              archiveType: 'tar'
              tarCompression: 'gz'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildNumber).tgz'
              replaceExistingArchive: true          

          - task: PublishPipelineArtifact@1
            condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
            displayName: 'Publish Plan Artifact'
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'oci-vcn-subnet-sl-plan'  

  - stage: 'OCI_VCN_Subnet_SecurityList_Apply'
    dependsOn: 'OCI_VCN_Subnet_SecurityList'
    displayName: OCI VCN Subnet Security List Apply

    jobs:
      - deployment: 'TerraformApplyOCINetworking'   
        displayName: ' Apply Terraform for OCI Networking'
        pool: 'Self-Hosted'
        environment: 'Oracle-Prod'
        strategy:
          runOnce:
            deploy:
              steps:

              - task: TerraformInstaller@0
                displayName: 'Terraform Install'
                inputs:
                  terraformVersion: ${{ parameters.terraformVersion }}
              - checkout: none
                  
              - task: ExtractFiles@1
                displayName: 'Extract Plan Artifact'
                inputs:
                  archiveFilePatterns: '$(Pipeline.Workspace)/oci-vcn-subnet-sl-plan/$(Build.BuildNumber).tgz'
                  destinationFolder: '$(System.DefaultWorkingDirectory)/01_vcn_subnet/'
                  cleanDestinationFolder: true
              - checkout: none

              - task: CmdLine@2
                inputs:
                  script: |
                    terraform apply ${BUILD_BUILDNUMBER}.tfplan -auto-approve"
                  workingDirectory: '$(System.DefaultWorkingDirectory)/linux'
              - checkout: none
