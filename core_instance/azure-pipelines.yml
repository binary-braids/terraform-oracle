parameters:
  - name: terraformVersion
    type: string
    default: 'latest'

trigger:
- none

stages:
  - stage: 'OCICoreInstance'
    dependsOn: []
    displayName: 'OCI Core Instance'

    jobs:
      - job: 'terraforminitplan'
        displayName: 'Initialize and Plan Terraform for OCI Core Instance'
        pool: Self-Hosted

        steps:

          - task: TerraformInstaller@0
            displayName: 'Terraform Install'
            inputs:
              terraformVersion: ${{ parameters.terraformVersion }}
  
          - task: CmdLine@2       
            inputs:
              script: |
                terraform init -backend-config="/terraform/variables/terraform-oracle/core_instance/backend_oracle_core_instance.tf"
              workingDirectory: '$(System.DefaultWorkingDirectory)/core_instance/'

          - task: CmdLine@2
            inputs:
              script: |
                terraform plan
              workingDirectory: '$(System.DefaultWorkingDirectory)/core_instance/'

  - stage: 'OCICoreInstanceApply'
    dependsOn: 'OCICoreInstance'
    displayName: OCI Core Instance Apply

    jobs:
      - deployment: 'TerraformApplyOCICoreInstance'   
        displayName: ' Apply Terraform for OCI COre Instance'
        pool: 'Self-Hosted'
        environment: 'Oracle-Prod'
        strategy:
          runOnce:
            deploy:
              steps:

              - task: TerraformInstaller@0
                displayName: 'Terraform Install'
                inputs:
                  terraformVersion: ${{ parameters.terraformVersion }}
                  
              - task: CmdLine@2
                inputs:
                  script: |
                    terraform apply
                  workingDirectory: '$(System.DefaultWorkingDirectory)/core_instance/'
